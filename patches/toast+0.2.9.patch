diff --git a/node_modules/toast/src/commands/incremental.js b/node_modules/toast/src/commands/incremental.js
index de21dd5..48056e5 100644
--- a/node_modules/toast/src/commands/incremental.js
+++ b/node_modules/toast/src/commands/incremental.js
@@ -66,7 +66,7 @@ class IncrementalCommand extends Command {
         const fullFilePath = path.resolve(siteDir, filepath);
         const fileContents = await fs.readFile(fullFilePath, "utf-8");
         const browserComponent = await transformComponentForBrowser(
-          fileContents
+          fileContents, fullFilePath
         );
         const browserComponentPath = path.resolve(publicDir, filepath);
         // make sure directory to put file in exists
@@ -77,7 +77,7 @@ class IncrementalCommand extends Command {
             fs.writeFile(browserComponentPath, browserComponent.code, "utf-8")
           );
 
-        const nodeComponent = await transformComponentForNode(fileContents);
+        const nodeComponent = await transformComponentForNode(fileContents, fullFilePath);
         const nodeComponentPath = path.resolve(cacheDir, filepath);
         await fs
           .mkdir(path.dirname(nodeComponentPath), { recursive: true })
diff --git a/node_modules/toast/src/transforms.js b/node_modules/toast/src/transforms.js
index 4a9f5aa..a26311f 100644
--- a/node_modules/toast/src/transforms.js
+++ b/node_modules/toast/src/transforms.js
@@ -2,11 +2,17 @@ const { transformAsync } = require("@babel/core");
 const path = require("path");
 // const WebdependenciesAliases = require("./babel/babel-plugin-webdependencies-aliases");
 
-module.exports.transformComponentForBrowser = (mod) =>
+module.exports.transformComponentForBrowser = (mod, filename) =>
   transformAsync(mod, {
+    filename,
     babelrc: false,
     presets: [`@babel/preset-react`],
     plugins: [
+      ["transform-postcss", {
+        "config": "postcss.config.js",
+        "extensions": [".module.css"]
+      }],
+      `babel-plugin-inline-react-svg`,
       `babel-plugin-preval`,
       `babel-plugin-transform-inline-environment-variables`,
       `@babel/plugin-proposal-class-properties`,
@@ -22,13 +28,19 @@ module.exports.transformComponentForBrowser = (mod) =>
     ],
   });
 
-module.exports.transformComponentForNode = (mod) =>
+module.exports.transformComponentForNode = (mod, filename) =>
   transformAsync(mod, {
+    filename,
     babelrc: false,
     presets: [
       [`@babel/preset-env`, { targets: { node: "current" } }],
       `@babel/preset-react`,
     ],
-    plugins: [`babel-plugin-preval`],
+    plugins: [
+      ["transform-postcss", {
+        "config": "postcss.config.js",
+        "extensions": [".module.css"]
+      }],`babel-plugin-preval`,
+      `babel-plugin-inline-react-svg`],
     // plugins: [WebdependenciesAliases]
   });
